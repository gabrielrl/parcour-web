{"version":3,"sources":["parcour.spec.ts"],"names":[],"mappings":"AAAA,IAAU,IAAI,CA8Gb;AA9GD,WAAU,IAAI;IAAC,IAAA,KAAK,CA8GnB;IA9Gc,WAAA,KAAK;QAClB,IAAO,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAEpC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAEzB,QAAQ,CAAC,SAAS,EAAE;YAElB,IAAI,OAAO,CAAC;YAEZ,UAAU,CAAC;gBACT,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC;YAEH,QAAQ,CAAC,yBAAyB,EAAE;gBAElC,EAAE,CAAC,wBAAwB,EAAE;oBAC3B,IAAI,IAAI,GAAG,aAAa,CAAC;oBACzB,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;oBACpC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAChC,CAAC,CAAC,CAAC;gBAEH,EAAE,CAAC,mCAAmC,EAAE;oBACtC,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;oBACvC,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,EAAE,OAAO,EAAE,CAAE,OAAO,CAAE,EAAE,CAAC,CAAC;oBAC9C,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC;gBAEH,EAAE,CAAC,0DAA0D,EAAE;oBAC7D,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;oBACvC,IAAI,IAAI,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;oBAC9B,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,EAAE,OAAO,EAAE,CAAE,IAAI,CAAE,EAAC,CAAC,CAAC;oBAC1C,IAAI,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,EAAnB,CAAmB,CAAC,CAAC;oBACzD,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;oBACxB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC;gBAGH,EAAE,CAAC,qCAAqC,EAAE;oBACxC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;oBACrC,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,EAAE,OAAO,EAAE,CAAE,IAAI,CAAE,EAAE,CAAC,CAAC;oBAC3C,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACrC,CAAC,CAAC,CAAC;gBAEH,EAAE,CAAC,4DAA4D,EAAE;oBAC/D,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;oBACrC,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAC3B,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,EAAE,OAAO,EAAE,CAAE,IAAI,CAAE,EAAC,CAAC,CAAC;oBAC1C,IAAI,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,EAAhB,CAAgB,CAAC,CAAC;oBACtD,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;oBACxB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC;YAKL,CAAC,CAAC,CAAC;YAEH,QAAQ,CAAC,aAAa,EAAE;gBACtB,EAAE,CAAC,YAAY,EAAE;oBACf,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC;yBAClB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;gBAChD,CAAC,CAAC,CAAC;gBAEH,QAAQ,CAAC,6BAA6B,EAAE;oBACtC,IAAI,aAAkB,CAAC;oBAEvB,UAAU,CAAC;wBACT,aAAa,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;oBACrC,CAAC,CAAC,CAAC;oBAEH,EAAE,CAAC,qBAAqB,EAAE;wBACxB,MAAM,CAAC,aAAa,CAAC;6BAClB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oBACzD,CAAC,CAAC,CAAC;oBAEH,EAAE,CAAC,gCAAgC,EAAE;wBACnC,MAAM,CAAC,aAAa,CAAC;6BAClB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;6BAC3B,OAAO,CAAC,EAAE,CAAC,CAAC;oBACjB,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,QAAQ,CAAC,6BAA6B,EAAE;oBACtC,IAAI,aAAkB,CAAC;oBACvB,UAAU,CAAC;wBACT,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;wBACxB,OAAO,CAAC,IAAI,GAAG,gBAAgB,CAAC;wBAChC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;wBAChD,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;wBAC/C,aAAa,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;oBACrC,CAAC,CAAC,CAAC;oBAEH,EAAE,CAAC,qBAAqB,EAAE;wBACxB,MAAM,CAAC,aAAa,CAAC;6BAClB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oBACzD,CAAC,CAAC,CAAC;oBAEH,EAAE,CAAC,0BAA0B,EAAE;wBAC7B,MAAM,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;wBAClD,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;wBACpD,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;wBACtE,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,CAAC;4BAC7B,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;4BACpC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;wBACnC,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC,CAAC;IACL,CAAC,EA9Gc,KAAK,GAAL,UAAK,KAAL,UAAK,QA8GnB;AAAD,CAAC,EA9GS,IAAI,KAAJ,IAAI,QA8Gb","file":"parcour.spec.js","sourcesContent":["namespace PRKR.Tests {\r\n  import Parcour = PRKR.Model.Parcour;\r\n\r\n  let expect = chai.expect;\r\n\r\n  describe('Parcour', function() {\r\n\r\n    let parcour;\r\n\r\n    beforeEach(function() {\r\n      parcour = new Parcour();\r\n    });\r\n\r\n    describe('constructor (with data)', function() {\r\n\r\n      it('allows to set the name', function() {\r\n        let name = \"new parcour\";\r\n        let p = new Parcour({ name: name });\r\n        expect(p.name).to.equal(name);\r\n      });\r\n\r\n      it('allow to specify a doorway object', function() {\r\n        let doorway = new PRKR.Model.Doorway();\r\n        let p = new Parcour({ objects: [ doorway ] });\r\n        expect(p.objects).to.contain(doorway);\r\n      });\r\n\r\n      it('allows to specify a doorway object (using a data object)', function() {\r\n        let doorway = new PRKR.Model.Doorway();\r\n        let data = doorway.toObject();\r\n        let p = new Parcour({ objects: [ data ]});\r\n        let result = _.find(p.objects, o => o.id === doorway.id);\r\n        expect(result).to.be.ok;\r\n        expect(result.name).to.equal(doorway.name);\r\n      });\r\n\r\n\r\n      it('allow to specify a room area object', function() {\r\n        let room = new PRKR.Model.RoomArea();\r\n        let p = new Parcour({ objects: [ room ] });\r\n        expect(p.objects).to.contain(room);\r\n      });\r\n\r\n      it('allows to specify a room area object (using a data object)', function() {\r\n        let room = new PRKR.Model.RoomArea();\r\n        let data = room.toObject();\r\n        let p = new Parcour({ objects: [ data ]});\r\n        let result = _.find(p.objects, o => o.id === room.id);\r\n        expect(result).to.be.ok;\r\n        expect(result.name).to.equal(room.name);\r\n      });\r\n\r\n\r\n\r\n      \r\n    });\r\n\r\n    describe('.toObject()', function() {\r\n      it('is defined', function() {\r\n        expect(new Parcour())\r\n          .to.have.property('toObject').a('Function');\r\n      });\r\n\r\n      describe('used on an empty object, it', function() {\r\n        let parcourObject: any;\r\n\r\n        beforeEach(function() {\r\n          parcourObject = parcour.toObject();\r\n        });\r\n\r\n        it('declares the `name`', function() {\r\n          expect(parcourObject)\r\n            .to.have.property('name').which.equals(parcour.name);\r\n        });\r\n\r\n        it('declares an empty object array', function() {\r\n          expect(parcourObject)\r\n            .to.have.property('objects')\r\n            .members([]);\r\n        });\r\n      });\r\n\r\n      describe('used on a filled object, it', function() {\r\n        let parcourObject: any;\r\n        beforeEach(function() {\r\n          parcour = new Parcour();\r\n          parcour.name = 'A test parcour';\r\n          parcour.objects.push(new PRKR.Model.RoomArea());\r\n          parcour.objects.push(new PRKR.Model.Doorway());\r\n          parcourObject = parcour.toObject();\r\n        });\r\n\r\n        it('declares the `name`', function() {\r\n          expect(parcourObject)\r\n            .to.have.property('name').which.equals(parcour.name);\r\n        });\r\n\r\n        it('declares an object array', function() {\r\n          expect(parcourObject).to.have.property('objects');\r\n          expect(_.isArray(parcourObject.objects)).to.be.true;\r\n          expect(parcourObject.objects.length).to.equal(parcour.objects.length);\r\n          parcourObject.objects.forEach(o => {\r\n            expect(o).to.have.property('$type');\r\n            expect(o).to.have.property('id');\r\n          });\r\n        });\r\n      });\r\n    });\r\n\r\n  });\r\n}"]}